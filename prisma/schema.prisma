// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  role          String    @default("USER")

  fname       String
  lname       String
  regCode     String
  provCode    String
  citymunCode String
  brgyCode    String
  gender      String
  birthDate   DateTime
  age         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userCovidStatus UserCovidStatus?
  userHistory     UserHistory[]
  notification    Notification[]

  @@index([id])
}

model Account {
  id                String  @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
}

model UserCovidStatus {
  id     String  @id @default(uuid())
  status String?

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Management {
  id               String  @id @default(uuid())
  name             String
  email            String  @unique
  password         String?
  regCode          String
  provCode         String
  citymunCode      String
  brgyCode         String
  daysWithoutCovid Int     @default(0)

  userHistory UserHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserHistory {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  managementId String
  management   Management @relation(fields: [managementId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([managementId])
  @@index([userId])
}

model Notification {
  id      String @id @default(uuid())
  message String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
